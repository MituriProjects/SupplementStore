@model ProductDetailsVM

<environment exclude="Testing">

    <div class="d-flex align-items-center mx-2" style="height:170px;">

        <div id="btn-prev-image" class="d-inline-block btn btn-info py-4 px-0 invisible" style="height:90px; width:40px;"><p class="h3" style="width:14px;">&#x300A</p></div>

        <ul id="image-list" class="list-unstyled d-inline-block mx-1" data-image-count="@Model.Images.Count()">

            @foreach (var image in Model.Images.Select((value, index) => new { value, index })) {

                if (image.index == 0) {

                    <li data-image-index="@image.index">

                        <img src="~/productImages/@Model.Product.Id/@image.value"
                             alt="product image titled @image.value"
                             width="150" />

                        @if (User.IsInRole("Admin")) {

                            <form asp-controller="Product" asp-action="RemoveImage">
                                <input hidden name="ProductId" value="@Model.Product.Id" />
                                <input hidden name="ImageName" value="@image.value" />
                                <button type="submit" class="btn btn-outline-primary" title="Usuń">&#x1F5D1</button>
                            </form>
                        }

                    </li>
                }
                else {

                    <li data-image-index="@image.index" style="display:none;">

                        <img src="~/productImages/@Model.Product.Id/@image.value"
                             alt="product image titled @image.value"
                             width="150" />

                        @if (User.IsInRole("Admin")) {

                            <div>

                                <form asp-controller="Product" asp-action="SetImageAsMain" class="d-inline-block">
                                    <input hidden name="ProductId" value="@Model.Product.Id" />
                                    <input hidden name="ImageName" value="@image.value" />
                                    <button type="submit" class="btn btn-outline-primary" title="Ustaw jako główny">&#x272A</button>
                                </form>

                                <form asp-controller="Product" asp-action="RemoveImage" class="d-inline-block">
                                    <input hidden name="ProductId" value="@Model.Product.Id" />
                                    <input hidden name="ImageName" value="@image.value" />
                                    <button type="submit" class="btn btn-outline-primary" title="Usuń">&#x1F5D1</button>
                                </form>

                            </div>
                        }

                    </li>
                }
            }

        </ul>

        <div id="btn-next-image" class="d-inline-block btn btn-info py-4" style="height:90px; width:40px;"><p class="h3">&#x300B</p></div>

    </div>

    <h3>@Model.Product.Name</h3>
    <h4>@Model.Product.Price</h4>

    @if (User.Identity.IsAuthenticated) {

        <form method="post" asp-controller="Basket" asp-action="Add">
            <input hidden name="ProductId" value="@Model.Product.Id" />
            <input hidden name="Quantity" value="1" />
            <input hidden name="ReturnUrl" value="/Product/Details/@Model.Product.Id" />
            <button type="submit" class="btn btn-outline-primary">@Localizer["AddToBasketButtonText"]</button>
        </form>
    }

    <div class="bg-info m-2 p-2 w-25">

        <h4>@Localizer["RatingsHeader"]:</h4>

        @{

            int CalculateRatingCount(IEnumerable<ProductOpinionDetails> productOpinions, int rating) =>
                productOpinions.Where(e => e.Stars == rating).Count();
        }

        <div>5 gwiazdek: @CalculateRatingCount(Model.Opinions, 5)</div>
        <div>4 gwiazdki: @CalculateRatingCount(Model.Opinions, 4)</div>
        <div>3 gwiazdki: @CalculateRatingCount(Model.Opinions, 3)</div>
        <div>2 gwiazdki: @CalculateRatingCount(Model.Opinions, 2)</div>
        <div>1 gwiazdka: @CalculateRatingCount(Model.Opinions, 1)</div>
    </div>

    @foreach (var opinion in Model.Opinions.Where(e => e.Text != null && e.IsHidden == false)) {

        <div class="bg-secondary text-light m-2 p-2 w-25">

            <div class="mb-1">@Localizer["RatingLabel"]: @opinion.Stars</div>

            <div>@opinion.Text</div>

            @if (User.IsInRole("Admin")) {

                <div class="mt-1">
                    <form asp-controller="Opinion" asp-action="Hide" asp-route-id="@opinion.Id">
                        <a asp-controller="Opinion" asp-action="Edit" asp-route-id="@opinion.Id" class="btn btn-warning">@Localizer["EditOpinionButtonText"]</a>
                        <button type="submit" class="btn btn-danger mx-1">@Localizer["HideOpinionButtonText"]</button>
                    </form>
                </div>
            }

        </div>
    }

    @if (User.IsInRole("Admin")) {

        <hr />

        <form asp-controller="Product" asp-action="AddImage" class="m-2" enctype="multipart/form-data">

            <input hidden name="ProductId" value="@Model.Product.Id" />

            <div class="form-group m-1">
                <label for="File">@Localizer["AddImageLabel"]</label>
                <label for="choose-file-btn" class="btn btn-outline-dark">@Localizer["ChooseFileButtonText"]</label>
                <input type="file" id="choose-file-btn" class="form-control-file" name="File" style="display:none;" />
                <span id="chosen-file-text">@Localizer["NoImageSelectedText"]</span>
            </div>

            <div class="form-group m-1">
                <button type="submit" class="btn btn-primary">@Localizer["AddImageButtonText"]</button>
            </div>

        </form>
    }

    <script type="text/javascript">

        $(document).ready(function () {

            var imageCount = Number($("#image-list")
                .attr("data-image-count"));

            if (imageCount <= 1) {

                $("#btn-next-image")
                    .addClass("invisible");
            }

            $("#btn-next-image")
                .click(function () {

                    var shownImage = $("#image-list")
                        .find("li:visible")
                        .first();

                    var shownImageIndex = Number(shownImage
                        .attr("data-image-index"));

                    var nextImage = shownImage
                        .next();

                    shownImage.hide();

                    nextImage.show();

                    $("#btn-prev-image")
                        .removeClass("invisible");

                    if (shownImageIndex + 2 == imageCount) {

                        $("#btn-next-image")
                            .addClass("invisible");
                    }
                });

            $("#btn-prev-image")
                .click(function () {

                    var shownImage = $("#image-list")
                        .find("li:visible")
                        .first();

                    var shownImageIndex = Number(shownImage
                        .attr("data-image-index"));

                    var prevImage = shownImage
                        .prev();

                    shownImage.hide();

                    prevImage.show();

                    $("#btn-next-image")
                        .removeClass("invisible");

                    if (shownImageIndex == 1) {

                        $("#btn-prev-image")
                            .addClass("invisible");
                    }
                });
        });

        $(document).ready(function () {

            $("#choose-file-btn")
                .change(function () {

                    var fileName = $(this)
                        .val();

                    fileName = fileName
                        .substring(fileName.lastIndexOf("\\") + 1);

                    $("#chosen-file-text")
                        .text(fileName);
                });
        });

    </script>

</environment>

<environment include="Testing">

    <div name="ProductId">@Model.Product.Id</div>
    <div name="ProductName">@Model.Product.Name</div>
    <div name="ProductPrice">@Model.Product.Price.ToString()</div>

    @foreach (var image in Model.Images.Select((value, index) => new { value, index })) {

        <div name="ProductImage(@image.index)">@image.value</div>
    }

    @foreach (var opinion in Model.Opinions) {

        <div name="OpinionStars">@opinion.Stars</div>
        <div name="OpinionText">@opinion.Text</div>
        <div name="OpinionIsHidden">@opinion.IsHidden</div>
    }

</environment>